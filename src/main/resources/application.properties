# 포트
server.port=9090

# 컨텍스트 path
server.servlet.context-path=/ROOT

# view 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# DB연동
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=
spring.datasource.username=sa
spring.datasource.password=

# sql문이 있는 위치 설정(mybatis)
mybatis.mapper-locations=classpath:/mappers/JH/*Mapper.xml, classpath:/mappers/DJ/*Mapper.xml, classpath:/mappers/*Mapper.xml

# dto 위치 설정 각자가 반환 및 입력 타입 패키지 적기
mybatis.type-aliases-package=com.finalproject.DJ.dto,com.finalproject.DJ.dto

# db로 세션관리
server.servlet.session.timeout=3600
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always

# Mail Setting
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ldj8196
spring.mail.password=
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true

# ddl
# create => 엔티티의 정보를 읽어서 테이블 생성, 재구동시 다시 생성(DROP + CREATE)
# update => 엔티티의 정보를 읽어서 변경사항 발생시 생성(CREATE)
# none => ddl사용하지않음
# validate => 엔티티와 테이블이 정상 매핑되었는지 확인
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# 테이블을 미리생성하고 entity만들어서 연결
# spring.jpa.hibernate.ddl-auto=validate
# spring.jpa.hibernate.ddl-auto =update

#filesize가 큰 경우 size 지정 (ex)png파일)
spring.servlet.multipart.maxFileSize=10MB
spring.servlet.multipart.maxRequestSize=10MB